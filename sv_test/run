#!/bin/env python3

import fileinput
import pathlib
import shutil
import subprocess


def main():
    clone_stable_version_of_svunit()
    prepare_compile_for_current_svunit()
    print("Running tests")


def clone_stable_version_of_svunit():
    if (pathlib.Path('svunit').is_dir()):
        return

    subprocess.check_call(['git', 'clone', 'https://github.com/svunit/svunit.git'])
    subprocess.check_call(['git', 'checkout', 'v3.36.0'], cwd='svunit')


def prepare_compile_for_current_svunit():
    pathlib.Path('svunit_under_test').mkdir(exist_ok=True)
    create_copy_of_package()
    link_included_files()


def create_copy_of_package():
    shutil.copyfile('../svunit_base/svunit_pkg.sv', 'svunit_under_test/svunit_under_test.sv')
    with fileinput.FileInput('svunit_under_test/svunit_under_test.sv', inplace=True, backup='.bak') as file:
        for line in file:
            print(line.replace("package svunit_pkg", "package svunit_under_test"), end='')


def link_included_files():
    included_files = [p for p in pathlib.Path('../svunit_base').glob('*') if p.is_file() and p.name != 'svunit_pkg.sv']
    for file in included_files:
        new_name = file.name.replace('svunit_', 'svunit_under_test_')
        pathlib.Path(f'svunit_under_test/{new_name}').symlink_to(f'../{file}')


main()
